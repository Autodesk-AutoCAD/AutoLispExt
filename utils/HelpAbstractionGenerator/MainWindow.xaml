<Window x:Class="HelpAbstractionGenerator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HelpAbstractionGenerator"
        x:Name="mw"
        IsEnabled="{Binding isIdle, ElementName=mw}"        
        mc:Ignorable="d"
        Title="Utility for Creating the webHelpAbstraction.json" Height="450" Width="800">
    <Window.Resources>
        <local:LinkObjectTypeItemStyleSelector x:Key="Step2StyleSelector"/>
        <local:FunctionTemplateSelector x:Key="tvOverridesOverridesSelector"/>
    </Window.Resources>
    <Grid>        
        <TabControl x:Name="tabInterface" SelectionChanged="tabInterface_SelectionChanged">           
  
            
            <TabItem x:Name="tab1" Header="Step 1 Expose Links" Tag="Navigation Collection">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Tag, ElementName=tab1}" FontWeight="Bold"/>
                            <Button x:Name="btnCollectNavElements" Content="Collect Links and Continue" Grid.Column="1"
                                    Click="btnCollectNavElements_Click" Padding="5,0"/>
                        </Grid>                        
                        <Separator/>
                        <TextBlock TextWrapping="Wrap" Margin="5">
                                   Once the page has loaded, expand all the left-side navigation elements you want to include in the data collection,
                                   this is required because the actual links don't exist until they've been expanded through a click event. Finally,
                                   click the 'Collect Links and Continue' button before moving onto step 2.
                        </TextBlock>
                        <Separator Margin="0" Padding="0"/>
                    </StackPanel>                    
                    <WebBrowser x:Name="wbCollectNavElements" Grid.Row="1" local:WebBrowserHelper.Body="{Binding navURL, ElementName=mw}"/>
                </Grid>
            </TabItem>
    
            
            
            
            
            <TabItem x:Name="tab2" Header="Step 2 Classify Links" Tag="Link Source Management">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="6*"/>
                    </Grid.ColumnDefinitions>                    
                    <StackPanel Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Tag, ElementName=tab2}" FontWeight="Bold"/>
                            <Button x:Name="btnInitNavLinks" Content="Save and Continue" Click="btnInitNavLinks_Click" Grid.Column="1" Padding="5,0" />
                        </Grid>                        
                        <Separator/>
                        <TextBlock TextWrapping="Wrap" Margin="5">
                                   On the left are the links that you expanded from Step 1. You should review these to make sure you didn't miss anything.
                                   On the right is where you need to clasify which each of them represents. Efforts have been made to pre-classify as many as
                                   possible. Scan the pre-classified ones for errors and assign any of the unclassified/uncolored ones using the right click context menu.
                                   Leave the ones that do not require data from as 'NotSet'. When finished click the Save and Continue button.
                        </TextBlock>
                        <Separator Margin="0" Padding="0"/>
                    </StackPanel>
                    <ListView x:Name="lbxInitNavLinks" Grid.Row="1" Grid.Column="1" SelectionMode="Extended" FontSize="16"
                              ItemContainerStyleSelector="{DynamicResource Step2StyleSelector}">
                        <ListView.Resources>
                            <Style x:Key="DefaultItemStyle" TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="ObjectStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Pink"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="MethodStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="DeepSkyBlue"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="PropertyStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="LightSteelBlue"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="FunctionStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Silver"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="EventStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="MediumSeaGreen"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="DclAttributeStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Gold"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                            <Style x:Key="DclTileStyle" TargetType="{x:Type ListViewItem}">
                                <Setter Property="Background" Value="Yellow"/>
                                <EventSetter Event="PreviewMouseRightButtonDown" Handler="lbxInitNavLinks_PreviewMouseRightButtonDown" />
                            </Style>
                        </ListView.Resources>                        
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Tag="0" Header="Object" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="1" Header="Method" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="2" Header="Property" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="8" Header="Event" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="4" Header="Function" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="6" Header="DCL Tile" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <MenuItem Tag="7" Header="DCL Attribute" Click="lbxInitNavLinks_MenuItem_Click"/>
                                <Separator/>
                                <MenuItem Tag="99" Header="Not Set" Click="lbxInitNavLinks_MenuItem_Click"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.View>                            
                            <GridView>
                                <GridViewColumn Header="Category" DisplayMemberBinding="{Binding category}" Width="150"/>
                                <GridViewColumn Header="Title" DisplayMemberBinding="{Binding title}" Width="750"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <WebBrowser x:Name="wbCollectedLinks" Grid.Row="1" Grid.Column="0" local:WebBrowserHelper.Body="{Binding navURL, ElementName=mw}" />
                </Grid>
            </TabItem>
    
            
            
            
            
            <TabItem x:Name="tab3" Header="Step 3 Downloads" Tag="Downloading Content">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>                            
                            <Grid Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="{Binding Tag, ElementName=tab3}" FontWeight="Bold"/>
                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <TextBlock Text="{Binding Value, ElementName=sldContentDownload, StringFormat='Page Download Speed: ~{0}s'}"
                                               Margin="5,0" VerticalAlignment="Center" Foreground="Gray"/>
                                    <Slider x:Name="sldContentDownload" Value="4" Width="100" Interval="1" TickPlacement="BottomRight" IsSnapToTickEnabled="True" Margin="10,0"
                                            Minimum="2" Maximum="6" SmallChange="1" LargeChange="1" TickFrequency="1" Ticks="2,3,4,5,6" Foreground="Black"/>
                                    <Button x:Name="btnContentDownload" Content="Download and Continue" Click="btnContentDownload_Click" Padding="5,0"/>
                                </StackPanel>
                            </Grid>
                        </Grid>                        
                        <Separator/>
                        <TextBlock TextWrapping="Wrap" Margin="5">
                                   Warning, once you start this process, the progress will be visible and could be closed, but you will not be able to cancel the downloads. 
                                   First set the desired page download speed using the slider. Then click 'Download and Continue' and the classified link targets from Step 2 will
                                   become locally available content for repeated webs craping operations.
                            <LineBreak/>
                                   Page Speed: this program operates 2 browser windows performing incremental steps on each. This give the content time
                                   to be fully served by the Autodesk help system. The default setting is to download 1 page to disk aproximately every 4 seconds and is
                                   the suggested value for most reasonably decent internet connections. You can lower this number to save some time, but you may have to perform
                                   the download several time to actually obtain all the content.
                        </TextBlock>
                        <Separator Margin="0" Padding="0"/>
                    </StackPanel>
                    <WebBrowser x:Name="wbDownloader1" Grid.Column="0" Grid.Row="1"/>
                    <WebBrowser x:Name="wbDownloader2" Grid.Column="1" Grid.Row="1"/>
                </Grid>
            </TabItem>
      
            
            
            
            
            <TabItem x:Name="tab4" Header="Step 4 HTML Scrape" Tag="Scraping Local Content">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" MaxWidth="1500" MinWidth="200"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.ColumnSpan="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Tag, ElementName=tab4}" FontWeight="Bold"/>
                            <Button x:Name="btnScrapeContent" Content="Extract and Continue" Click="btnScrapeAllContent_Click" 
                                    Grid.Column="1" Grid.ColumnSpan="4" Padding="5,0"/>
                        </Grid>
                        <Separator/>
                        <TextBlock TextWrapping="Wrap" Margin="5">
                                   The below controls exist as a developmental utility. Click on one of the named pages to see the JSON representation of the
                                   document. This information has not undergone any override post-processing. When your ready to stip mine the entire
                                   local document set and move on to fine tuning with overrides, then click 'Collect Data and Continue'
                        </TextBlock>
                        <Separator Margin="0" Padding="0"/>                        
                    </StackPanel>
                    <TreeView x:Name="lbxScrapeContent" Grid.Column="0" Grid.Row="1"
                              SelectedItemChanged="lbxScrapeContent_SelectedItemChanged" 
                              ItemsSource="{Binding CatagorizedLinks, ElementName=mw}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <Setter Property="IsExpanded" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>                            
                            <HierarchicalDataTemplate ItemsSource="{Binding Path=Value}">
                                <Label Content="{Binding Path=Key}"/>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"/>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                    <GridSplitter Grid.Row="1" Grid.Column="1" Background="Black" Width="4" ResizeDirection="Columns"  
                                 ResizeBehavior="PreviousAndNext"/>
                    <TextBox x:Name="tbxScrapeContent" Grid.Column="2" Grid.Row="1" IsReadOnly="True" Background="LightGray" TextWrapping="Wrap"/>
                    <WebBrowser x:Name="wbScrapeContent" Grid.Column="3" Grid.Row="2" local:WebBrowserHelper.Body="{Binding SelectedItem.url, ElementName=lbxScrapeContent}"/>
                </Grid>
            </TabItem>
  
            
            
            
            
            <TabItem x:Name="tab5" Header="Step 5 Apply Overrides" Tag="Apply Value Overrides">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" MaxWidth="1500" MinWidth="200"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.ColumnSpan="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{Binding Tag, ElementName=tab4}" FontWeight="Bold"/>
                            <Button x:Name="btnExportFinalAbstraction" Content="Apply and Save" Grid.Column="4" 
                                    HorizontalAlignment="Right" Click="btnExportFinalAbstraction_Click" Padding="5,0"/>
                        </Grid>
                        <Separator/>
                        <TextBlock TextWrapping="Wrap" Margin="5">
                            Use the right click context menu on the left tree items to select a value that needs changed. This will create a 'root' property rule 
                            in the top right panel and activate the lower right json editor with the contents of that 'root' property value. click the 'Save' button
                            when you've finished making changes to the JSON or Notes. If you want to delete a rule, just select it and click the 'Delete' button.
                            Be careful editing JSON, there is no validation checking if you've screwed up the structure; it will either work or it won't.
                            Click the 'Apply and Save' button when you are done editing rule values. This will prompt you for an export location for the 
                            webHelpAbstraction.json file.
                        </TextBlock>
                        <Separator Margin="0" Padding="0"/>
                    </StackPanel>
                    <Grid Grid.Column="0" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*" MinWidth="100"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="cmbOverridesFilterType" SelectedIndex="0" SelectionChanged="cmbOverridesFilterType_SelectionChanged">
                                <ComboBoxItem Content="Signature+Return"/>
                                <ComboBoxItem Content="Attributes"/>
                                <ComboBoxItem Content="Description"/>
                                <ComboBoxItem Content="Enums"/>
                                <ComboBoxItem Content="Id (root)"/>
                                <ComboBoxItem Content="Methods"/>
                                <ComboBoxItem Content="Properties"/>
                                <ComboBoxItem Content="Platforms"/>
                                <ComboBoxItem Content="Signature"/>
                                <ComboBoxItem Content="Valid Objects"/>
                            </ComboBox>
                            <Label Content="Visual Filter:" Grid.Column="1"/>
                            <TextBox x:Name="tbxOverridesFilter" Grid.Column="2" VerticalContentAlignment="Center"
                                     Text="{Binding ElementName=mw, Path=Filter, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button x:Name="btnOverridesFilterClear" Grid.Column="3" Content=" X " Click="btnOverridesFilterClear_Click"
                                    ToolTip="If the textbox stops responding, switch to the step 4 tab and come back to step 5 to reset it"/>
                        </Grid>
                        <TreeView x:Name="tvApplyOverrides" Grid.Column="0" Grid.Row="1" MinWidth="200" ItemsSource="{Binding}"   
                                  VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.IsContainerVirtualizable="True"
                                  ContextMenuOpening="OverridesContextMenu_ContextMenuOpening"
                                  MouseLeftButtonUp="tvApplyOverrides_MouseLeftButtonUp"
                                  MouseRightButtonDown="tvApplyOverrides_MouseRightButtonDown">
                            <TreeView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </TreeView.ItemsPanel>
                            <TreeView.Resources>
                                <ContextMenu x:Key="tviCMenu" DataContext="{Binding}">
                                    <MenuItem Header="placeholder"/>
                                </ContextMenu>
                                <Style x:Key="txtSigDimmer" TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontFamily" Value="Consolas"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                    <Style.Triggers>
                                        <Trigger Property="FontWeight" Value="Normal">
                                            <Setter Property="Foreground" Value="Silver"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                                <Style x:Key="txtRetDimmer" TargetType="{x:Type TextBlock}">
                                    <Setter Property="FontFamily" Value="Consolas"/>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Style.Triggers>
                                        <Trigger Property="FontWeight" Value="Normal">
                                            <Setter Property="Foreground" Value="Silver"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Value.returnType}" Value="{x:Null}"/>
                                                <Condition Binding="{Binding returnType}" Value="{x:Null}"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                                <Style TargetType="{x:Type MenuItem}">
                                    <EventSetter Event="PreviewMouseLeftButtonUp" Handler="MenuItem_PreviewMouseLeftButtonUp"/>                                    
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding}"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>                                
                                <HierarchicalDataTemplate x:Key="StdDictTemplate" ItemsSource="{Binding Path=Value}">
                                    <TextBlock Text="{Binding Path=Key}" ContextMenu="{DynamicResource tviCMenu}" Style="{DynamicResource txtSigDimmer}"
                                               FontWeight="{Binding Value.weight, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"/>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate x:Key="FuncTemplate" ItemsSource="{Binding Path=Value}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Value.signature}" ContextMenu="{DynamicResource tviCMenu}"
                                                   Style="{DynamicResource txtSigDimmer}" VerticalAlignment="Center"
                                                   FontWeight="{Binding Value.weight, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="  =>  " VerticalAlignment="Center" Style="{DynamicResource txtRetDimmer}"                                                   
                                                   FontWeight="{Binding Value.weight, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="{Binding Value.returnType}" ContextMenu="{DynamicResource tviCMenu}" 
                                                   Style="{DynamicResource txtRetDimmer}" VerticalAlignment="Center" 
                                                   FontWeight="{Binding Value.weight, UpdateSourceTrigger=PropertyChanged}"/>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate x:Key="ambFuncTemplate" ItemsSource="{Binding Path=Value}">
                                    <TextBlock Text="{Binding Path=Key}" ContextMenu="{DynamicResource tviCMenu}" 
                                               FontWeight="{Binding Value.weight, UpdateSourceTrigger=PropertyChanged}"/>
                                    <HierarchicalDataTemplate.ItemTemplate>
                                        <HierarchicalDataTemplate DataType="{x:Type local:ejoFunction}" ItemsSource="{Binding}">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding signature}" ContextMenu="{DynamicResource tviCMenu}"
                                                           Style="{DynamicResource txtSigDimmer}" VerticalAlignment="Center"
                                                           FontWeight="{Binding weight, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock Text="  =>  " VerticalAlignment="Center" Style="{DynamicResource txtRetDimmer}"
                                                           FontWeight="{Binding weight, UpdateSourceTrigger=PropertyChanged}"/>
                                                <TextBlock Text="{Binding returnType}" ContextMenu="{DynamicResource tviCMenu}" 
                                                           Style="{DynamicResource txtRetDimmer}" VerticalAlignment="Center" 
                                                           FontWeight="{Binding weight, UpdateSourceTrigger=PropertyChanged}"/>
                                            </StackPanel>
                                        </HierarchicalDataTemplate>
                                    </HierarchicalDataTemplate.ItemTemplate>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>                            
                            <TreeViewItem Header="DCL Attributes" ItemsSource="{Binding dclAttributes}" ItemTemplate="{DynamicResource ResourceKey=FuncTemplate}"/>
                            <TreeViewItem Header="DCL Tiles" ItemsSource="{Binding dclTiles}" ItemTemplate="{DynamicResource ResourceKey=FuncTemplate}"/>
                            <TreeViewItem Header="Functions (ambiguous)" ItemsSource="{Binding ambiguousFunctions}" ItemTemplate="{DynamicResource ResourceKey=ambFuncTemplate}"/>
                            <TreeViewItem Header="Functions" ItemsSource="{Binding functions}" ItemTemplate="{DynamicResource ResourceKey=FuncTemplate}"/>
                            <TreeViewItem Header="VLA Events" ItemsSource="{Binding events}" ItemTemplate="{DynamicResource ResourceKey=StdDictTemplate}"/>
                            <TreeViewItem Header="VLA Objects" ItemsSource="{Binding objects}" ItemTemplate="{DynamicResource ResourceKey=StdDictTemplate}"/>
                        </TreeView>
                    </Grid>

                    <GridSplitter Grid.Row="1" Grid.Column="1" Width="4" Background="Black" VerticalAlignment="Stretch"
                                  HorizontalAlignment="Left" ResizeDirection="Columns" ResizeBehavior="PreviousAndNext"/>
                    <WebBrowser x:Name="wbApplyOverrides" Grid.Row="1" Grid.Column="2" Margin="0" Visibility="Visible"/>
                    <Grid Grid.Column="3" Grid.Row="1" Margin="2,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="40*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="60*"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Override Rules" FontWeight="Bold" Grid.Row="0" VerticalAlignment="Bottom" Padding="0"/>
                        <Button x:Name="btnOverrideRuleDelete"  Grid.Row="0" Content="Delete" Padding="10,2" HorizontalAlignment="Right"
                                MinHeight="{Binding ActualHeight, ElementName=btnExportFinalAbstraction}" Margin="0,3,0,0"
                                Click="btnOverrideRuleDelete_Click" IsEnabled="{Binding IsEnabled, ElementName=tbxOverridesEditor}"/>
                        <ListView x:Name="lbxOverrideRules" Grid.Row="1" ItemsSource="{Binding AllOverrides, ElementName=mw}"
                                  SelectionChanged="lbxOverrideRules_SelectionChanged">
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>
                                        <GridViewColumn Header="Symbol ID" DisplayMemberBinding="{Binding id}"/>
                                        <GridViewColumn Header="Target Property" DisplayMemberBinding="{Binding targetProperty}"/>
                                        <GridViewColumn Header="Notes" DisplayMemberBinding="{Binding notes}"/>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Grid Grid.Row="2" Margin="0,5,0,0" IsEnabled="{Binding IsEnabled, ElementName=tbxOverridesEditor}">
                            <Label Content="Override Values" FontWeight="Bold" VerticalAlignment="Bottom" Padding="0"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                <Button x:Name="btnOverridesResetRule" Content="Reset" Padding="10,2" Margin="8,0"
                                        MinHeight="{Binding ActualHeight, ElementName=btnExportFinalAbstraction}"
                                        Click="btnOverridesResetRule_Click"/>
                                <Button x:Name="btnOverridesSaveRule" Content="Save" Padding="10,2" Margin="0"
                                        MinHeight="{Binding ActualHeight, ElementName=btnExportFinalAbstraction}"
                                        Click="btnOverridesSaveRule_Click"/>
                            </StackPanel>
                        </Grid>
                        <TextBox x:Name="tbxOverridesEditor" Grid.Row="3"
                                 Text="{Binding SelectedItem.jsonValue, ElementName=lbxOverrideRules, Mode=OneWay}"
                                 AcceptsReturn="True" AcceptsTab="True" FontFamily="Consolas" FontSize="14">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem, ElementName=lbxOverrideRules}" Value="{x:Null}">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                        <Label Content="Rule Notes:" Grid.Row="4" IsEnabled="{Binding IsEnabled, ElementName=tbxOverridesEditor}" 
                               Padding="0" FontWeight="Bold"/>
                        <TextBox x:Name="tbxOverrideEditorNotes" Grid.Row="5" 
                                 Text="{Binding SelectedItem.notes, ElementName=lbxOverrideRules, Mode=OneWay}"
                                 IsEnabled="{Binding IsEnabled, ElementName=tbxOverridesEditor}"/>
                    </Grid>
                </Grid>
            </TabItem>


        </TabControl>
    </Grid>
</Window>
