{
	"name": "autolispdcl",
	"scopeName": "source.autolispdcl",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#commentblock"
		},
		{
			"include": "#keywords"
		},
		{
			"include":"#numbers"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {		
		"comment": {
			"patterns": [
				{
					"name":"comment.line",
					"match": "\/\/.*$"
				}
			]
		},
		"commentblock": {
			"patterns": [
				{
					"name":"comment.block",
					"begin": "\/\\*",
					"end": "\\*\/",
					"patterns": []
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword",
					"match": "(?<=\\s|:|\\{|\\}|=|;|^)(action|alignment|allow_accept|aspect_ratio|audit_level|big_increment|black|blue|bottom|boxedaction|alignment|allow_accept|aspect_ratio|audit_level|big_increment|black|blue|bottom|boxed|boxed_column|boxed_radio_column|boxed_radio_row|boxed_row|button|cancel_button|centered|children_alignment|children_fixed_height|children_fixed_width|children_width|cluster|color|column|concatenation|cyan|default_button|default_dcl_settings|dialog|dialog_background|dialog_foreground|dialog_line|edit_box|edit_limit|edit_width|errmsg|errtile|false|fixed_height|fixed_width|graphics_background|graphics_foreground|green|height|help_button|horisontal|horizontal_alignment|horizontal_margin|icon_image|image|image_block|image_button|info_button|initial_focus|is_bold|is_cancel|is_default|is_enabled|is_tab_stop|key|label|layout|left|list|list_box|magenta|max_value|min_value|mnemonic|multiple_select|none|null|num_items|ok_button|ok_cancel|ok_cancel_err|ok_cancel_help|ok_cancel_help_errtile|ok_cancel_help_info|ok_only|paragraph|popup_height|popup_list|radio_button|radio_cluster|radio_column|radio_row|red|retirement_button|right|row|slider|small_increment|spacer|spacer_0|spacer_1|tab_truncate|tabs|text|text_part|tile|tiny|toggle|top|true|type|value|vertical|vertical_alignment|vertical_margin|while|white|wide|width|yellow|password_char|fixed_width_font)(?=\\s|\\}|\\{|=|;)"
				}
			]
		},
		"numerics": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match":"(?<=\\(|\\s|^)((-?(0|([1-9]\\d*)))(\\.\\d+)?)(?=\\s|;|\\(|\\))"
				}
			]
		},
		"strings": 
		{
			"name":"string.quoted",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "."
				}
			]
		}
	}
}